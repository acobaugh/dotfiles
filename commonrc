## .commonrc
## settings that are shared between zsh and bash

umask 077

commonrc_deps=(bc)
for d in $commonrc_deps ; do
	test -x "$(which $d 2>/dev/null)" || echo "commonrc: missing dep '$d'"
done

export EDITOR=vim

# per-OS settings
case "$(uname -s)" in
	Linux)
		LS_OPTIONS="--color=auto"
		eval "$(dircolors)"
		;;
esac

## aliases
alias ..="cd ../"
alias c="clear"
alias e="exit"
alias ls="ls $LS_OPTIONS"
alias tmux='tmux -2' # enable 256-color support
alias pasteit="curl -F 'sprunge=<-' http://sprunge.us"
alias tf=terraform
alias tg=terragrunt
#alias alpine="alpine"

alias ap="ansible-playbook"
alias apv="pass ansible/vault | ansible-playbook --vault=/bin/cat"
alias av="pass ansible/vault | ansible --vault=/bin/cat"
alias ave="pass ansible/vault | EDITOR=vim ansible-vault edit --vault=/bin/cat"

alias pssh="pssh -o StrictHostKeyChecking=no"
alias psudo="pssh --extra-args '-t -t'"

if [[ "$HOME" == *"/afs/"* ]] ; then
	alias keybase="keybase --socket-file /tmp/${USER}_keybase.socket" # no sockets in AFS
fi

# news server
export NNTPSERVER='news.psu.edu'

## PATH
export PATH=$HOME/bin:$HOME/:$HOME/.npm-global/bin:$HOME/.local/bin:/usr/heimdal/bin:/usr/heimdal/sbin:/usr/sbin:/sbin:$PATH

## add Go workspace bin dir
if [ -x "$(which go 2>&1)" ] ; then
	_GOPATH="$(go env GOPATH)"
	export GOPATH=${_GOPATH:-$HOME/go}
	export PATH=$GOPATH/bin:$PATH
fi

## node.js yarn
if [ -d "$HOME/.yarn/bin" ] ; then
	export PATH="$HOME/.yarn/bin:$PATH"
fi

## Scala build tool
if [ -d "$HOME/sbt/latest/bin" ] ; then
	export PATH="$HOME/sbt/latest/bin:$PATH"
fi

## Zoom
if [ -d "$HOME/zoom" ] ; then
	export PATH="$PATH:$HOME/zoom"
fi

## nodejs local install prefix
export NPM_CONFIG_PREFIX=~/.npm-global

## Java
export JAVA_HOME=$(readlink -f /usr/bin/java | sed -e "s|bin/java||;s|jre/$||")
export CLASSPATH="$JAVA_HOME/lib"

## GPG stuff
#export PINENTRY="$HOME/bin/my-pinentry" # wrapper
#export PINENTRY_USER_DATA="curses" # default to pinentry-curses
if [ -x "$(which gpg-agent)" ] ; then
	gav=$(gpg-agent --version | head -1 | awk '{ print $NF }')
	test=$(echo ${gav:0:3}'<'2.1 | bc -l 2>/dev/null)
	if [ "$test" = "1" ] ; then
		# We only need all this cruft if we are running something older than 2.1
		gpgenvfile="$HOME/.gnupg/gpg-agent.env"
		if [[ -e "$gpgenvfile" ]] && kill -0 $(grep GPG_AGENT_INFO "$gpgenvfile" | cut -d: -f 2) 2>/dev/null; then
			eval "$(cat "$gpgenvfile")"
		else
			eval "$(gpg-agent --daemon --enable-ssh-support --write-env-file "$gpgenvfile" --pinentry-program $PINENTRY)"
		fi
		export GPG_AGENT_INFO  # the env file does not contain the export statement
		export SSH_AUTH_SOCK   # enable gpg-agent for ssh
	fi
fi
export GPG_TTY=$(tty)

# password-store options
export PASSWORD_STORE_X_SELECTION="primary"

## vim: syntax=sh
