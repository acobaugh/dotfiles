#!/bin/sh

BASE=$(readlink -f "$(dirname "$0")"/..)
. $BASE/dotfiles/lib

umask 0007

usage() {
	echo "Usage: $0 [-f] [ -h]"
	echo "  -f : Move existing files out of the way, then symlink"
	echo "  -h : This help message"
}

if [ "$1" = "-h" ] ; then
	usage
	exit
fi

force=0
if [ "$1" = "-f" ] ; then
	force=1
fi

BASE=$(readlink -f "$(dirname "$0")"/..)

echo BASE="$BASE"

for f in $dotfiles ; do
	printf "[%s] " $f
	if [ ! -e "$BASE/$f" ] ; then
		# file specified in config but does not exist in repo
		echo "Not in repo. Skipping."
		continue
	fi
	if [ -L "$HOME/.$f" ] || [ ! -e "$HOME/.$f" ] ; then
		# already a symlink or does not exist
		echo "$HOME/.$f -> $BASE/$f"
		link "$BASE/$f" "$HOME/.$f"
	elif [ -e "$HOME/.$f" ] && [ "$force" -eq 1 ] ; then
		# file exists, and we were told to symlink anyway
		echo "  Moving ~/.$f -> ~/.$f.backup ; Symlinking ~/.$f -> $BASE/$f"
		mv "$HOME/.$f" "$HOME/.$f.backup" && link "$BASE/$f" "$HOME/.$f"
	else
		echo "  Already exists and is not a symlink. Skipping."
	fi
done

for f in $plainfiles ; do
	printf "[%s] " $f
	if [ ! -e "$BASE/$f" ] ; then
		# file specified in config but does not exist in repo
		echo "Not in repo. Skipping."
		continue
	fi
	if [ -L "$HOME/$f" ] || [ ! -e "$HOME/$f" ] ; then
		# already a symlink or does not exist
		echo "$HOME/$f -> $BASE/$f"
		link "$BASE/$f" "$HOME/$f"
	elif [ -e "$HOME/$f" ] && [ "$force" -eq 1 ] ; then
		# file exists, and we were told to symlink anyway
		echo "  Moving ~/$f -> ~/$f.backup ; Symlinking ~/$f -> $BASE/$f"
		mv "$HOME/$f" "$HOME/$f.backup" && link "$BASE/$f" "$HOME/$f"
	else
		echo "  Already exists and is not a symlink. Skipping."
	fi
done

